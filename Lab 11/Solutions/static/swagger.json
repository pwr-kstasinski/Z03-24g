{
  "swagger": "2.0",
  "info": {
    "description": "This is a documentation of my ChatApp API.",
    "version": "1.0.2",
    "title": "ChatApp"
  },
  "host": "localhost:5000",
  "tags": [
    {
      "name": "Messages",
      "description": "Message-related operations"
    },
    {
      "name": "Users",
      "description": "User-related operations"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/send": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Send a message",
        "description": "",
        "operationId": "send",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "message",
            "description": "Message definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/download": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Receive messages for conversation",
        "description": "",
        "operationId": "receive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "description": "User id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner_id",
            "description": "Id of conversation partner",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Messages given",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Message"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register user",
        "description": "",
        "operationId": "register",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully registered"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Login user",
        "description": "",
        "operationId": "login",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "description": "Username",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "password",
            "description": "Password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully logged in"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Logout user",
        "description": "Logging out user changing his status in db",
        "operationId": "logout",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "description": "Username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully logged out"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List logged users",
        "description": "",
        "operationId": "List users",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "id of user requesting",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Users given",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User_public"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/read": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Mark all messages from conversation as read",
        "description": "",
        "operationId": "Mark read",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "description": "User id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "partner_id",
            "description": "Id of conversation partner",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Marked as read"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user info",
        "description": "",
        "operationId": "Get User",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "description": "Username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A User object",
            "schema": {
              "$ref": "#/definitions/User_public"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/makesick": {
      "get": {
        "summary": "Make server sick",
        "description": "",
        "operationId": "makesick",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Made server sick"
          },
          "400": {
            "description": "dunno"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "John"
        },
        "password": {
          "type": "string",
          "example": "password1234"
        },
        "logged": {
          "type": "boolean",
          "example": true
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "sender_id": {
          "type": "integer",
          "example": 2
        },
        "receiver_id": {
          "type": "integer",
          "example": 1
        },
        "message": {
          "type": "string",
          "example": "Hello there"
        },
        "date": {
          "type": "string",
          "example": "2021-05-19T18:59:22"
        },
        "read": {
          "type": "boolean",
          "example": false
        }
      },
      "xml": {
        "name": "Message"
      }
    },
    "User_public": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 5
        },
        "username": {
          "type": "string",
          "example": "John"
        },
        "logged": {
          "type": "boolean",
          "example": true
        },
        "unread": {
          "type": "integer",
          "example": 3
        },
        "last": {
          "type": "string",
          "example": "05/20/2021, 10:32:21"
        }
      },
      "xml": {
        "name": "User_public"
      }
    }
  }
}