swagger: "2.0"
info:
  description: "This is a documentation of my ChatApp API."
  version: "1.0.1"
  title: "ChatApp"
host: "localhost:5000"
tags:
- name: "Messages"
  description: "Message-related operations"
- name: "Users"
  description: "User-related operations"
schemes:
- "http"
paths:
  /send:
    post:
      tags:
      - "Messages"
      summary: "Send a message"
      description: ""
      operationId: "send"
      consumes:
      - "application/json"
      produces:
      - "text/plain"
      parameters:
      - in: "body"
        name: "message"
        description: "Message definition"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        "400":
          description: "Invalid input"
        "200":
          description: "Message sent"

  /download:
    get:
      tags:
      - "Messages"
      summary: "Receive messages for conversation"
      description: ""
      operationId: "receive"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "user_id"
        description: "User id"
        required: true
        type: "integer"
      - in: "query"
        name: "partner_id"
        description: "Id of conversation partner"
        required: true
        type: "integer"
      responses:
        "400":
          description: "Invalid input"
        "200":
          description: "Messages given"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Message"
  /register:
    post:
      tags:
      - "Users"
      summary: "Register user"
      description: ""
      operationId: "register"
      produces:
      - "text/plain"
      parameters:
      - in: "body"
        name: "user"
        description: "User definition"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "400":
          description: "Invalid input"
        "200":
          description: "Succesfully registered"
  /login:
    get:
      tags:
      - "Users"
      summary: "Login user"
      description: ""
      operationId: "login"
      produces:
      - "text/plain"
      parameters:
      - in: "query"
        name: "username"
        description: "Username"
        required: true
        type: "string"
      - in: "query"
        name: "password"
        description: "Password"
        required: True
        type: "string"
      responses:
        "400":
            description: "Invalid input"
        "200":
            description: "Succesfully logged in"
  /logout:
    get:
      tags:
        - "Users"
      summary: "Logout user"
      description: ""
      operationId: "logout"
      produces:
        - "text/plain"
      parameters:
        - in: "query"
          name: "username"
          description: "Username"
          required: true
          type: "string"
      responses:
        "400":
          description: "Invalid input"
        "200":
          description: "Succesfully logged out"
  /users:
    get:
      tags:
      - "Users"
      summary: "List logged users"
      description: ""
      operationId: "List users"
      produces:
      - "application/json"
      responses:
        "400":
          description: "Invalid input"
        "200":
          description: "Users given"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User_public"
definitions:
  User:
    type: object
    properties:
      username:
        type: "string"
        example: "John"
      password:
        type: "string"
        example: "password1234"
      logged:
        type: "boolean"
        example: true
    xml:
      name: "User"
  Message:
    type: "object"
    properties:
      sender_id:
        type: "integer"
        example: 2
      receiver_id:
        type: "integer"
        example: 1
      message:
        type: "string"
        example: "Hello there"
      date:
        type: "string"
        example: "2021-05-17 14:49:21.861093"
    xml:
      name: "Message"
  User_public:
    type: object
    properties:
      id:
        type: "integer"
        example: 5
      username:
        type: "string"
        example: "John"
      logged:
        type: "boolean"
        example: true
    xml:
      name: "User_public"